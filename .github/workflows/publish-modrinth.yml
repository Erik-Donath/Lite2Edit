name: Publish to Modrinth

on:
  release:
    types: [published]

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      game_versions: ${{ steps.game_versions.outputs.versions }}
    strategy:
      matrix:
        minecraft_version: ["1.20.2", "1.20.4", "1.20.5", "1.20.6", "1.21", "1.21.1", "1.21.3", "1.21.4", "1.21.5", "1.21.6", "1.21.7", "1.21.8", "1.21.9", "1.21.10"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Extract version from release tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Collect game versions
        id: game_versions
        run: |
          # Convert matrix versions to a single list for output
          VERSIONS='["1.20.2", "1.20.4", "1.20.5", "1.20.6", "1.21", "1.21.1", "1.21.3", "1.21.4", "1.21.5", "1.21.6", "1.21.7", "1.21.8", "1.21.9", "1.21.10"]'
          echo "versions=$VERSIONS" >> $GITHUB_OUTPUT

      - name: Update version in gradle.properties
        run: |
          sed -i "s/mod_version=.*/mod_version=${{ env.VERSION }}/" gradle.properties

      - name: Build mod for MC ${{ matrix.minecraft_version }}
        run: ./gradlew remapJar "-Pminecraft_version=${{ matrix.minecraft_version }}"

      - name: Rename and upload JAR
        run: |
          mv build/libs/Lite2Edit-${{ steps.version.outputs.version }}.jar build/libs/lite2edit-fabric-${{ matrix.minecraft_version }}-${{ steps.version.outputs.version }}.jar

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: mod-${{ matrix.minecraft_version }}
          path: build/libs/lite2edit-fabric-${{ matrix.minecraft_version }}-${{ steps.version.outputs.version }}.jar
          retention-days: 1

  publish-modrinth:
    needs: build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Extract version from release tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract changelog for version
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          # Extract changelog section for this version
          if [ -f "CHANGELOG.md" ]; then
            # Try to find the section for this version
            CHANGELOG_CONTENT=$(awk -v version="$VERSION" '
              BEGIN { found=0; content="" }
              /^##/ { 
                if (found) exit
                if ($0 ~ version) found=1
                next
              }
              found && /^##/ { exit }
              found { content = content $0 "\n" }
              END { print content }
            ' CHANGELOG.md)
          
            # If no specific version found, use the latest section
            if [ -z "$CHANGELOG_CONTENT" ]; then
              CHANGELOG_CONTENT=$(awk '
                /^##/ { if (NR > 1) exit; next }
                NR > 1 { print }
              ' CHANGELOG.md | head -n 50)
            fi
          
            # Save to file for multiline content
            echo "$CHANGELOG_CONTENT" > changelog_excerpt.md
            echo "changelog_file=changelog_excerpt.md" >> $GITHUB_OUTPUT
            echo "has_changelog=true" >> $GITHUB_OUTPUT
          else
            echo "No CHANGELOG.md found - using release body"
            echo "has_changelog=false" >> $GITHUB_OUTPUT
          fi

      - name: Convert game versions array to multiline
        id: game_versions
        run: |
          # Convert JSON array to multiline format for mc-publish
          VERSIONS=$(echo '${{ needs.build-matrix.outputs.game_versions }}' | jq -r '.[]' | tr '\n' '|' | sed 's/|$//')
          echo "versions_multiline<<EOF" >> $GITHUB_OUTPUT
          echo '${{ needs.build-matrix.outputs.game_versions }}' | jq -r '.[]' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: builds/

      - name: Organize files for publishing
        run: |
          mkdir -p final-builds
          find builds/ -name "*.jar" -exec cp {} final-builds/ \;
          ls -la final-builds/

      - name: Publish to Modrinth
        if: steps.changelog.outputs.has_changelog == 'true'
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{ secrets.MODRINTH_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: final-builds/*.jar
          name: Lite2Edit ${{ steps.version.outputs.version }}
          version: ${{ steps.version.outputs.version }}
          version-type: release
          changelog-file: ${{ steps.changelog.outputs.changelog_file }}
          loaders: |
            fabric
          game-versions: ${{ steps.game_versions.outputs.versions_multiline }}
          dependencies: |
            fabric-language-kotlin | depends | *
            worldedit | depends | *
          java: |
            21

      - name: Publish to Modrinth (fallback to release body)
        if: steps.changelog.outputs.has_changelog == 'false'
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{ secrets.MODRINTH_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: final-builds/*.jar
          name: Lite2Edit ${{ steps.version.outputs.version }}
          version: ${{ steps.version.outputs.version }}
          version-type: release
          changelog: ${{ github.event.release.body }}
          loaders: |
            fabric
          game-versions: ${{ steps.game_versions.outputs.versions_multiline }}
          dependencies: |
            fabric-language-kotlin | depends | *
            worldedit | depends | *
          java: |
            21
